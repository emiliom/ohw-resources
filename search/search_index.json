{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview What is a hackweek? The hackweek model has emerged in the data science community as a powerful tool for fostering exchange of ideas in research and computation by providing training in modern data analysis workflows. In contrast to conventional academic conferences or workshops, hackweeks are intensive and interactive, facilitated by three core components: tutorials on state-of-the-art methodologies, peer-learning, and on-site project work in a collaborative environment. Compared to hackathons typically focused on software development, hackweeks have a greater focus on learning and open-ended projects as informal education and peer learning opportunities. This setup is particularly powerful for sciences that require not only domain-specific knowledge but also effective computational workflows to foster rapid exchange of ideas and make discovery. This is an excellent match with the nature of oceanographic research where data are large and complex and the community is diverse and collaborative. The hackweek model adopted by OceanHackWeek was spearheaded by the successful Astro- , Neuro- , and Geohackweek . Mission Statement Core objectives The core objectives of OceanHackWeek are: Promote data and software proficiency in the ocean sciences community: Provide oceanographers with computational and data science skills to advance modern oceanographic research, which often requires the integration and manipulation of diverse sources of big data and models. Facilitate inclusive community building: Connect oceanographers across disciplines, career stages and trajectories, and diversity of experience and identity to cultivate an inclusive, open and sharing culture that catalyzes data-intensive research. Training and education We will share knowledge in modern software tools aimed at handling increasingly large and complex oceanographic datasets. Our approach will be to develop templates for best practices in solving common oceanographic data science challenges, built off a set of sample datasets provided during the hackathon. We will learn from leading experts in various fields, and use this knowledge to develop educational content that can be shared across disciplines long after the event. Our training will focus on software tools, but we will also explore challenges in successfully navigating complexity in project management and design. Networking and community building We will connect students, faculty, software developers and others across industry, government and academic settings. The connections we make during the hackathon will be maintained through an online user community. We hope our activities can foster the growth of an interdisciplinary network for solving Earth science challenges. Software development We will harness our collective talent assembled during the event to rapidly advance the development of software tools.","title":"Overview"},{"location":"#overview","text":"","title":"Overview"},{"location":"#what-is-a-hackweek","text":"The hackweek model has emerged in the data science community as a powerful tool for fostering exchange of ideas in research and computation by providing training in modern data analysis workflows. In contrast to conventional academic conferences or workshops, hackweeks are intensive and interactive, facilitated by three core components: tutorials on state-of-the-art methodologies, peer-learning, and on-site project work in a collaborative environment. Compared to hackathons typically focused on software development, hackweeks have a greater focus on learning and open-ended projects as informal education and peer learning opportunities. This setup is particularly powerful for sciences that require not only domain-specific knowledge but also effective computational workflows to foster rapid exchange of ideas and make discovery. This is an excellent match with the nature of oceanographic research where data are large and complex and the community is diverse and collaborative. The hackweek model adopted by OceanHackWeek was spearheaded by the successful Astro- , Neuro- , and Geohackweek .","title":"What is a hackweek?"},{"location":"#mission-statement","text":"","title":"Mission Statement"},{"location":"#core-objectives","text":"The core objectives of OceanHackWeek are: Promote data and software proficiency in the ocean sciences community: Provide oceanographers with computational and data science skills to advance modern oceanographic research, which often requires the integration and manipulation of diverse sources of big data and models. Facilitate inclusive community building: Connect oceanographers across disciplines, career stages and trajectories, and diversity of experience and identity to cultivate an inclusive, open and sharing culture that catalyzes data-intensive research.","title":"Core objectives"},{"location":"#training-and-education","text":"We will share knowledge in modern software tools aimed at handling increasingly large and complex oceanographic datasets. Our approach will be to develop templates for best practices in solving common oceanographic data science challenges, built off a set of sample datasets provided during the hackathon. We will learn from leading experts in various fields, and use this knowledge to develop educational content that can be shared across disciplines long after the event. Our training will focus on software tools, but we will also explore challenges in successfully navigating complexity in project management and design.","title":"Training and education"},{"location":"#networking-and-community-building","text":"We will connect students, faculty, software developers and others across industry, government and academic settings. The connections we make during the hackathon will be maintained through an online user community. We hope our activities can foster the growth of an interdisciplinary network for solving Earth science challenges.","title":"Networking and community building"},{"location":"#software-development","text":"We will harness our collective talent assembled during the event to rapidly advance the development of software tools.","title":"Software development"},{"location":"conduct/","text":"Code of Conduct OceanHackWeek is dedicated to providing a harassment-free learning experience for everyone regardless of gender, gender identity and expression, sexual orientation, disability, physical appearance, body size, race, age or religion. We do not tolerate harassment of participants in any form. Sexual language and imagery is not appropriate for any conference venue, including talks. Conference participants violating these rules may be sanctioned or expelled from the conference without a refund at the discretion of the organizers. Harassment includes, but is not limited to: Verbal comments that reinforce social structures of domination related to gender, gender identity and expression, sexual orientation, disability, physical appearance, body size, race, age, religion. Sexual images in public spaces Deliberate intimidation, stalking, or following Harassing photography or recording Sustained disruption of talks or other events Inappropriate physical contact Unwelcome sexual attention Advocating for, or encouraging, any of the above behavior Participants asked to stop any harassing behavior are expected to comply immediately. If a participant engages in harassing behavior, the organizers retain the right to take any actions to keep the event a welcoming environment for all participants. This includes warning the offender or expulsion from OceanHackWeek with no refund. OceanHackWeek organizers may take action to redress anything designed to, or with the clear impact of, disrupting the event or making the environment hostile for any participants. We expect participants to follow these rules at all the event venues and event-related social activities. Reporting a violation Harassment and other code of conduct violations reduce the value of OceanHackWeek for everyone. If someone makes you or anyone else feel unsafe or unwelcome, please report it as soon as possible to one of the instructors. You can make a report either personally or anonymously. Anonymous reports can be made here . This anti-harassment policy is based on the example policy from the Geek Feminism wiki, created by the Ada Initiative and other volunteers. Group discussion Q: What can we do to create an optimal learning environment for everyone? If you see something, say something (wrt code of conduct) -- everyone can take responsibility for supporting participants Push your comfort zone, ask questions from many, reach out to the room Stay positive Creating space where everyone feels comfortable asking questions Don\u2019t dismiss ideas you may not fully understand; issues are challenges Respect our diverse backgrounds (language, technical skills, science background; career stage) Putting our best selves forward Be present Everyone feels comfortable contributing Be mindful of everyone\u2019s background and constraints Work with the person, don\u2019t just take over their keyboard Opportunity for anonymous comments (also use Slack) Empathize, put yourself in others\u2019 shoes","title":"Code of Conduct"},{"location":"conduct/#code-of-conduct","text":"OceanHackWeek is dedicated to providing a harassment-free learning experience for everyone regardless of gender, gender identity and expression, sexual orientation, disability, physical appearance, body size, race, age or religion. We do not tolerate harassment of participants in any form. Sexual language and imagery is not appropriate for any conference venue, including talks. Conference participants violating these rules may be sanctioned or expelled from the conference without a refund at the discretion of the organizers. Harassment includes, but is not limited to: Verbal comments that reinforce social structures of domination related to gender, gender identity and expression, sexual orientation, disability, physical appearance, body size, race, age, religion. Sexual images in public spaces Deliberate intimidation, stalking, or following Harassing photography or recording Sustained disruption of talks or other events Inappropriate physical contact Unwelcome sexual attention Advocating for, or encouraging, any of the above behavior Participants asked to stop any harassing behavior are expected to comply immediately. If a participant engages in harassing behavior, the organizers retain the right to take any actions to keep the event a welcoming environment for all participants. This includes warning the offender or expulsion from OceanHackWeek with no refund. OceanHackWeek organizers may take action to redress anything designed to, or with the clear impact of, disrupting the event or making the environment hostile for any participants. We expect participants to follow these rules at all the event venues and event-related social activities.","title":"Code of Conduct"},{"location":"conduct/#reporting-a-violation","text":"Harassment and other code of conduct violations reduce the value of OceanHackWeek for everyone. If someone makes you or anyone else feel unsafe or unwelcome, please report it as soon as possible to one of the instructors. You can make a report either personally or anonymously. Anonymous reports can be made here . This anti-harassment policy is based on the example policy from the Geek Feminism wiki, created by the Ada Initiative and other volunteers.","title":"Reporting a violation"},{"location":"conduct/#group-discussion","text":"Q: What can we do to create an optimal learning environment for everyone? If you see something, say something (wrt code of conduct) -- everyone can take responsibility for supporting participants Push your comfort zone, ask questions from many, reach out to the room Stay positive Creating space where everyone feels comfortable asking questions Don\u2019t dismiss ideas you may not fully understand; issues are challenges Respect our diverse backgrounds (language, technical skills, science background; career stage) Putting our best selves forward Be present Everyone feels comfortable contributing Be mindful of everyone\u2019s background and constraints Work with the person, don\u2019t just take over their keyboard Opportunity for anonymous comments (also use Slack) Empathize, put yourself in others\u2019 shoes","title":"Group discussion"},{"location":"numpy/","text":"Intro to Numpy This lesson provides an introduction to numpy. list learning objectives Reading Assignment (optional) (15 minutes) If you are a beginner Python programmer making the transition from Matlab, read this article . Practical Assignment (30 minutes) Work through this Introduction to Numpy .","title":"Intro to Numpy"},{"location":"numpy/#intro-to-numpy","text":"This lesson provides an introduction to numpy. list learning objectives","title":"Intro to Numpy"},{"location":"numpy/#reading-assignment-optional-15-minutes","text":"If you are a beginner Python programmer making the transition from Matlab, read this article .","title":"Reading Assignment (optional) (15 minutes)"},{"location":"numpy/#practical-assignment-30-minutes","text":"Work through this Introduction to Numpy .","title":"Practical Assignment (30 minutes)"},{"location":"pandas/","text":"Intro to Pandas This lesson provides an introduction to pandas. list learning objectives Practical Assignment (30 minutes) Work through this Introduction to Pandas .","title":"Intro to Pandas"},{"location":"pandas/#intro-to-pandas","text":"This lesson provides an introduction to pandas. list learning objectives","title":"Intro to Pandas"},{"location":"pandas/#practical-assignment-30-minutes","text":"Work through this Introduction to Pandas .","title":"Practical Assignment (30 minutes)"},{"location":"schedule/","text":"Schedule All OceanHackWeek 2020 \u201clive-virtual\u201d activities will take place during the period 11am-2pm PDT / 2pm-5pm EDT / 18:00-21:00 UTC on August 10-14. The Zoom link is posted on the #ohw20_announcements channel. Tutorials will cover data science topics, followed by project hacking. Pre-hackweek OPTIONAL activities will be on August 6-7. See the schedule below for details. All times listed below are in PDT (UTC-7). You can find your timezone offset at https://www.timeanddate.com or similar sites. This schedule is also available as a Google Calendar or iCal/WebCal subscription. Pre-hackweek OPTIONAL tutorials Thursday (August 6) Time Event Instructors 11:00AM - 1:00PM Git and GitHub Filipe Fernandes Joseph Gum 1:00PM - 2:00PM Icebreaker, ask us anything! Wu-Jung Lee Emilio Mayorga Stace Beaulieu Friday (August 7) Time Event Instructors 11:00AM - 1:00PM Jupyter and Scientific Python basics: numpy, pandas, matplotlib Leticia Portella 1:00PM - 2:00PM Icebreaker, ask us anything! Wu-Jung Lee Emilio Mayorga Stace Beaulieu Tutorials Monday (August 10) Time Event Instructors 11:00AM - 11:30AM Welcome to OceanHackWeek Code of Conduct Logistics Tutorial Overview 11:30AM - 12:15PM Xarray Deepak Cherian 12:15PM - 12:30PM Break 12:30PM - 1:15PM Searching and obtaining data from multiple servers Filipe Fernandes Alison Gray Ben Tupper 1:15PM - 1:30PM Break 1:30PM - 2:00PM Project pitch Joseph Gum Tuesday (August 11) Time Event Instructors 11:00AM - 11:30AM Participants lightning talk 11:30AM - 12:15PM Data visualization in Python Jim Bednar 12:15PM - 12:30PM Break 12:30PM - 1:15PM Data visualization in R Maria Pachiadaki 1:15PM - 1:30PM Break 1:30PM - 2:00PM Project work and helpdesks Everyone Wednesday (August 12) Time Event Instructors 11:00AM - 11:30AM Satellite data access and manipulation Chelle Gentemann 11:30AM - 12:15PM Data management Ben Tupper 12:15PM - 12:30PM Break 12:30PM - 2:00PM Project work and helpdesk Everyone Thursday (August 13) Time Event Instructors 11:00AM - 11:30AM Machine learning Valentina Staneva 11:30AM - 12:30PM ML case study and Q/A Maike Sonnewald 12:30PM - 12:45PM Break 12:45PM - 2:00PM Project work and helpdesks Everyone Friday (August 14) Time Event Instructors 11:00AM - 11:30AM Groups finalizing projects 11:30AM - 12:15PM Project presentations I Everyone 12:15PM - 12:30PM Break 12:30PM - 1:10PM Project presentations II Everyone 1:10PM - 1:15PM Break 1:15PM - 1:45PM Reproducible research Joseph Gum 1:45PM - 2:00PM Final Gathering Everyone","title":"Schedule"},{"location":"schedule/#schedule","text":"All OceanHackWeek 2020 \u201clive-virtual\u201d activities will take place during the period 11am-2pm PDT / 2pm-5pm EDT / 18:00-21:00 UTC on August 10-14. The Zoom link is posted on the #ohw20_announcements channel. Tutorials will cover data science topics, followed by project hacking. Pre-hackweek OPTIONAL activities will be on August 6-7. See the schedule below for details. All times listed below are in PDT (UTC-7). You can find your timezone offset at https://www.timeanddate.com or similar sites. This schedule is also available as a Google Calendar or iCal/WebCal subscription.","title":"Schedule"},{"location":"schedule/#pre-hackweek-optional-tutorials","text":"","title":"Pre-hackweek OPTIONAL tutorials"},{"location":"schedule/#thursday-august-6","text":"Time Event Instructors 11:00AM - 1:00PM Git and GitHub Filipe Fernandes Joseph Gum 1:00PM - 2:00PM Icebreaker, ask us anything! Wu-Jung Lee Emilio Mayorga Stace Beaulieu","title":"Thursday (August 6)"},{"location":"schedule/#friday-august-7","text":"Time Event Instructors 11:00AM - 1:00PM Jupyter and Scientific Python basics: numpy, pandas, matplotlib Leticia Portella 1:00PM - 2:00PM Icebreaker, ask us anything! Wu-Jung Lee Emilio Mayorga Stace Beaulieu","title":"Friday (August 7)"},{"location":"schedule/#tutorials","text":"","title":"Tutorials"},{"location":"schedule/#monday-august-10","text":"Time Event Instructors 11:00AM - 11:30AM Welcome to OceanHackWeek Code of Conduct Logistics Tutorial Overview 11:30AM - 12:15PM Xarray Deepak Cherian 12:15PM - 12:30PM Break 12:30PM - 1:15PM Searching and obtaining data from multiple servers Filipe Fernandes Alison Gray Ben Tupper 1:15PM - 1:30PM Break 1:30PM - 2:00PM Project pitch Joseph Gum","title":"Monday (August 10)"},{"location":"schedule/#tuesday-august-11","text":"Time Event Instructors 11:00AM - 11:30AM Participants lightning talk 11:30AM - 12:15PM Data visualization in Python Jim Bednar 12:15PM - 12:30PM Break 12:30PM - 1:15PM Data visualization in R Maria Pachiadaki 1:15PM - 1:30PM Break 1:30PM - 2:00PM Project work and helpdesks Everyone","title":"Tuesday (August 11)"},{"location":"schedule/#wednesday-august-12","text":"Time Event Instructors 11:00AM - 11:30AM Satellite data access and manipulation Chelle Gentemann 11:30AM - 12:15PM Data management Ben Tupper 12:15PM - 12:30PM Break 12:30PM - 2:00PM Project work and helpdesk Everyone","title":"Wednesday (August 12)"},{"location":"schedule/#thursday-august-13","text":"Time Event Instructors 11:00AM - 11:30AM Machine learning Valentina Staneva 11:30AM - 12:30PM ML case study and Q/A Maike Sonnewald 12:30PM - 12:45PM Break 12:45PM - 2:00PM Project work and helpdesks Everyone","title":"Thursday (August 13)"},{"location":"schedule/#friday-august-14","text":"Time Event Instructors 11:00AM - 11:30AM Groups finalizing projects 11:30AM - 12:15PM Project presentations I Everyone 12:15PM - 12:30PM Break 12:30PM - 1:10PM Project presentations II Everyone 1:10PM - 1:15PM Break 1:15PM - 1:45PM Reproducible research Joseph Gum 1:45PM - 2:00PM Final Gathering Everyone","title":"Friday (August 14)"},{"location":"logistics/getting_help/","text":"Getting Help We know how overwhelming all of this information can be. Here is some for asking questions and figuring out where to turn for help. You can ask anything on the Slack #general channel, any time. Organizers and helpers are monitoring this channel, and some of your fellow hackweek participants may be able to help you! Also, feel free to send a direct message on Slack to any of the organizers or helpers. Helpdesks Apart from the helpdesk Slack channels listed below, you are also welcome to direct message the helpers if you don't feel comfortable asking questions publicly. Git helpdesk : Filipe Fernandes, Wu-Jung Lee, Kavin Nguyen Data Access in R : Ben Tupper, Kavin Nguyen Data Access in Python : Filipe Fernandes, Alex Kearney, Chelle Gentemann, Emilio Mayorga, Wu-Jung Lee Visualization in R : Camille Ross, Kavin Nguyen Visualization in Python : Filipe Fernandes, Kavin Nguyen, Sophie Clayton Machine Learning : Valentina Staneva, Nick Record, Wu-Jung Lee During tutorials From Wu-Jung: I think we need to have a set intro each time we start a tutorial. Here is how we will be asking questions, here is where to get help. If we can distill the intro into a few lines, we could have the presenter dock a tab with those instructions through their full talk. Ask questions on Slack! Use the #tutorials channel to ask questions or check out answers to questions others have posed. We will use this same channel every day. Several of us will be monitoring this channel and addressing your questions throughout the tutorials Ask questions on the Slido page linked from the #tutorials channel (see the pinned message) Vote up questions from others to help the moderators prioritize which questions to ask the speaker during tutorials. Zoom Chat will not be available. Ask on Slack! You will be muted at the start of the tutorial presentation. The moderator will review questions on Slack and Slido, and ask the questions to the instructor during Q&A time. Projects See the Projects Getting Started page . Reporting a Code of Conduct violation Harassment and other Code of Conduct violations reduce the value of OceanHackWeek for everyone. If someone makes you or anyone else feel unsafe or unwelcome, please report it as soon as possible to one of the instructors. You can make a report either personally or anonymously. Anonymous reports can be made here .","title":"Getting Help"},{"location":"logistics/getting_help/#getting-help","text":"We know how overwhelming all of this information can be. Here is some for asking questions and figuring out where to turn for help. You can ask anything on the Slack #general channel, any time. Organizers and helpers are monitoring this channel, and some of your fellow hackweek participants may be able to help you! Also, feel free to send a direct message on Slack to any of the organizers or helpers.","title":"Getting Help"},{"location":"logistics/getting_help/#helpdesks","text":"Apart from the helpdesk Slack channels listed below, you are also welcome to direct message the helpers if you don't feel comfortable asking questions publicly. Git helpdesk : Filipe Fernandes, Wu-Jung Lee, Kavin Nguyen Data Access in R : Ben Tupper, Kavin Nguyen Data Access in Python : Filipe Fernandes, Alex Kearney, Chelle Gentemann, Emilio Mayorga, Wu-Jung Lee Visualization in R : Camille Ross, Kavin Nguyen Visualization in Python : Filipe Fernandes, Kavin Nguyen, Sophie Clayton Machine Learning : Valentina Staneva, Nick Record, Wu-Jung Lee","title":"Helpdesks"},{"location":"logistics/getting_help/#during-tutorials","text":"From Wu-Jung: I think we need to have a set intro each time we start a tutorial. Here is how we will be asking questions, here is where to get help. If we can distill the intro into a few lines, we could have the presenter dock a tab with those instructions through their full talk. Ask questions on Slack! Use the #tutorials channel to ask questions or check out answers to questions others have posed. We will use this same channel every day. Several of us will be monitoring this channel and addressing your questions throughout the tutorials Ask questions on the Slido page linked from the #tutorials channel (see the pinned message) Vote up questions from others to help the moderators prioritize which questions to ask the speaker during tutorials. Zoom Chat will not be available. Ask on Slack! You will be muted at the start of the tutorial presentation. The moderator will review questions on Slack and Slido, and ask the questions to the instructor during Q&A time.","title":"During tutorials"},{"location":"logistics/getting_help/#projects","text":"See the Projects Getting Started page .","title":"Projects"},{"location":"logistics/getting_help/#reporting-a-code-of-conduct-violation","text":"Harassment and other Code of Conduct violations reduce the value of OceanHackWeek for everyone. If someone makes you or anyone else feel unsafe or unwelcome, please report it as soon as possible to one of the instructors. You can make a report either personally or anonymously. Anonymous reports can be made here .","title":"Reporting a Code of Conduct violation"},{"location":"logistics/overview/","text":"Overview of Logistics Time OceanHackWeek 2020 will take place online daily, during the period 11am-2pm PDT / 2pm-5pm EDT / 18:00-21:00 UTC on August 10-14. Tutorials will cover data science topics, followed by project hacking in the afternoon. Pre-hackweek OPTIONAL activities will be on August 6-7. See Tutorial schedule for details. Channel of communication: Slack We will use the OceanHackWeek Slack workspace as the main channel of communication before, during, and after the hackweek. You should have received an invitation to join this workspace. If you haven't seen it in your inbox, check your spam folder, or email us at oceanhkw@uw.edu . go directly from a channel or direct message chat into a voice or video chat , with screen-sharing capability. This will be particularly useful during hack project time. OHW JupyterHub (\"The Hub\") and GitHub OHW JupyterHub (\"The Hub\"): https://ocean.hackweek.io OHW GitHub organization: https://github.com/oceanhackweek Tutorials broadcasting We will use Zoom to broadcast all tutorials. The Zoom link will be distributed via Slack. Hack projects See Project overview and Hacking at OHW20 for more info. Getting Help See the Getting Help page for guidance and links to have your questions answered or connect with organizers with concerns.","title":"Overview of Logistics"},{"location":"logistics/overview/#overview-of-logistics","text":"","title":"Overview of Logistics"},{"location":"logistics/overview/#time","text":"OceanHackWeek 2020 will take place online daily, during the period 11am-2pm PDT / 2pm-5pm EDT / 18:00-21:00 UTC on August 10-14. Tutorials will cover data science topics, followed by project hacking in the afternoon. Pre-hackweek OPTIONAL activities will be on August 6-7. See Tutorial schedule for details.","title":"Time"},{"location":"logistics/overview/#channel-of-communication-slack","text":"We will use the OceanHackWeek Slack workspace as the main channel of communication before, during, and after the hackweek. You should have received an invitation to join this workspace. If you haven't seen it in your inbox, check your spam folder, or email us at oceanhkw@uw.edu . go directly from a channel or direct message chat into a voice or video chat , with screen-sharing capability. This will be particularly useful during hack project time.","title":"Channel of communication: Slack"},{"location":"logistics/overview/#ohw-jupyterhub-the-hub-and-github","text":"OHW JupyterHub (\"The Hub\"): https://ocean.hackweek.io OHW GitHub organization: https://github.com/oceanhackweek","title":"OHW JupyterHub (\"The Hub\") and GitHub"},{"location":"logistics/overview/#tutorials-broadcasting","text":"We will use Zoom to broadcast all tutorials. The Zoom link will be distributed via Slack.","title":"Tutorials broadcasting"},{"location":"logistics/overview/#hack-projects","text":"See Project overview and Hacking at OHW20 for more info.","title":"Hack projects"},{"location":"logistics/overview/#getting-help","text":"See the Getting Help page for guidance and links to have your questions answered or connect with organizers with concerns.","title":"Getting Help"},{"location":"preweek/github/","text":"Git & GitHub Setup REVIEW THIS AND COMBINE WITH GIT AND GITHUB MATERIALS IN THE TEMPLATE Getting setup with Git and GitHub We will use Git and Github for collaborative work. Be sure to arrive at Oceanhackweek with your own GitHub account. Git Installation Windows You need to install Git for Windows from this link . For more setup details follow these instructions MAC OS Download the git installer and run it. Linux (Debian) sudo apt install git-all To test open the terminal (on Windows Git Bash) and setup your username and email: git config --global user.name \"your username\" git config --global user.email \"your email\" Getting started with Bash During the hackweek it will be useful to know how to navigate between files from the command line. If you are not familiar with the unix shell commands you can review the first three sections of this Software Carpentry Shell Novice lesson. On Windows, use the Git Bash terminal to run these commands. Command line editor When working on the command line, it is often handy to modify file content directly from there. For that you can use a command line editor such as nano . On Mac and Linux it is usually pre-installed, but for Windows you can follow the instructions in this link to set it up. Test your installation by opening a terminal and running nano --version . If it works you can link your github with nano: git config --global core.editor \"nano -w\" Resources Git and GitHub are very powerful tools but no doubt the learning curve is steep. Although we will cover some of the basics at Oceanhackweek, learning is an iterative process so below we list some resources which can help you be better prepared: What is GitHub? (3:45 min) CUAHSI Tutorial (1 hour) Software Carpentry Lesson (3 hours with exercises) GitHub Learning Lab : practice with a bot! (On your own pace)","title":"Git & GitHub Setup"},{"location":"preweek/github/#git-github-setup","text":"REVIEW THIS AND COMBINE WITH GIT AND GITHUB MATERIALS IN THE TEMPLATE","title":"Git &amp; GitHub Setup"},{"location":"preweek/github/#getting-setup-with-git-and-github","text":"We will use Git and Github for collaborative work. Be sure to arrive at Oceanhackweek with your own GitHub account. Git Installation Windows You need to install Git for Windows from this link . For more setup details follow these instructions MAC OS Download the git installer and run it. Linux (Debian) sudo apt install git-all To test open the terminal (on Windows Git Bash) and setup your username and email: git config --global user.name \"your username\" git config --global user.email \"your email\"","title":"Getting setup with Git and GitHub"},{"location":"preweek/github/#getting-started-with-bash","text":"During the hackweek it will be useful to know how to navigate between files from the command line. If you are not familiar with the unix shell commands you can review the first three sections of this Software Carpentry Shell Novice lesson. On Windows, use the Git Bash terminal to run these commands.","title":"Getting started with Bash"},{"location":"preweek/github/#command-line-editor","text":"When working on the command line, it is often handy to modify file content directly from there. For that you can use a command line editor such as nano . On Mac and Linux it is usually pre-installed, but for Windows you can follow the instructions in this link to set it up. Test your installation by opening a terminal and running nano --version . If it works you can link your github with nano: git config --global core.editor \"nano -w\"","title":"Command line editor"},{"location":"preweek/github/#resources","text":"Git and GitHub are very powerful tools but no doubt the learning curve is steep. Although we will cover some of the basics at Oceanhackweek, learning is an iterative process so below we list some resources which can help you be better prepared: What is GitHub? (3:45 min) CUAHSI Tutorial (1 hour) Software Carpentry Lesson (3 hours with exercises) GitHub Learning Lab : practice with a bot! (On your own pace)","title":"Resources"},{"location":"preweek/python/","text":"Python Requirements Overview Python software is distributed as a series of libraries that are called within your code to perform certain tasks. There are many different collections, or distributions of Python software. Generally you install a specific distribution of Python and then add additional libraries as you need them. There are also several different versions of Python. The two main versions right now are 2.7 and 3.7. During the hackweek we will be using Python 3.7 for the tutorials, and encouraging participants to do so. If you have only used Python 2 in the past check out the key differences here . Even though Python is one of the most adaptable, easy-to-use software systems, you can see there are still complexities to work out and potential challenges when delivering content to a large group. Therefore we have a number of different ways that we are trying to simplify this process to maximize your learning during Oceanhackweek. We will be using Ocean Pangeo ( http://ocean.pangeo.io ), which is a platform for using Jupyter Notebooks in the ocean, atmospheric, and climate research community. A Jupyter Notebook is an open-source web application that allows users to create and share documents containing live code, equations, visualizations, and markdown texts. Setting up Python locally Although, you we will provide you with a Python working environment, it will be good if you set up Python locally on your laptop: you might need it for some of your project work, Python review, or for future Python development. We recommend installing the Miniconda Python distribution. We can assist in setting up \"conda\" environments that will simplify the gathering of Python libraries and version specific to the tutorial you are working on. Conda is an open source package and environment management system for python libraries . We will be using various Python libraries with multiple dependencies, so it is critical that you have some sort of package management system in place. Conda can be installed in almost any computer. The advantage of conda compared to pip is that it has a built in environment management system as well as the management of binaries, and non-python dependencies. Here are the system requirements: 32-bit or 64-bit computer. Minimum 400 MB disk space to download and install. Windows Vista or newer, OS X 10.7+, or Linux (Ubuntu, RedHat and others; CentOS 5+) NOTE: You do not need administrative or root permissions to install conda if you select a user-writable install location. To test your installation you can run python in the terminal and check if the version you have is Miniconda Python 3. Let us know if on Slack you are having problems with installing Conda. Brushing up on Python Given all the heavy use of Python during Oceanhackweek, we will not be able to provide instruction in Python fundamentals. We expect you to have basic Python familiarity on the level of manipulating variables (lists, arrays), writing loops/functions, making simple plots. If you have not used Python before or it has been a while since you have used it, please, go thouroughly through the lesson below Software Carpentry Python Tutorial (1 day workshop with exercises) Notebook environment The more, the better! Here are a few more Python resources: * Codecademy Lesson (25 hours) * Python Data Science Handbook (on your own pace)","title":"Python Requirements"},{"location":"preweek/python/#python-requirements","text":"","title":"Python Requirements"},{"location":"preweek/python/#overview","text":"Python software is distributed as a series of libraries that are called within your code to perform certain tasks. There are many different collections, or distributions of Python software. Generally you install a specific distribution of Python and then add additional libraries as you need them. There are also several different versions of Python. The two main versions right now are 2.7 and 3.7. During the hackweek we will be using Python 3.7 for the tutorials, and encouraging participants to do so. If you have only used Python 2 in the past check out the key differences here . Even though Python is one of the most adaptable, easy-to-use software systems, you can see there are still complexities to work out and potential challenges when delivering content to a large group. Therefore we have a number of different ways that we are trying to simplify this process to maximize your learning during Oceanhackweek. We will be using Ocean Pangeo ( http://ocean.pangeo.io ), which is a platform for using Jupyter Notebooks in the ocean, atmospheric, and climate research community. A Jupyter Notebook is an open-source web application that allows users to create and share documents containing live code, equations, visualizations, and markdown texts.","title":"Overview"},{"location":"preweek/python/#setting-up-python-locally","text":"Although, you we will provide you with a Python working environment, it will be good if you set up Python locally on your laptop: you might need it for some of your project work, Python review, or for future Python development. We recommend installing the Miniconda Python distribution. We can assist in setting up \"conda\" environments that will simplify the gathering of Python libraries and version specific to the tutorial you are working on. Conda is an open source package and environment management system for python libraries . We will be using various Python libraries with multiple dependencies, so it is critical that you have some sort of package management system in place. Conda can be installed in almost any computer. The advantage of conda compared to pip is that it has a built in environment management system as well as the management of binaries, and non-python dependencies. Here are the system requirements: 32-bit or 64-bit computer. Minimum 400 MB disk space to download and install. Windows Vista or newer, OS X 10.7+, or Linux (Ubuntu, RedHat and others; CentOS 5+) NOTE: You do not need administrative or root permissions to install conda if you select a user-writable install location. To test your installation you can run python in the terminal and check if the version you have is Miniconda Python 3. Let us know if on Slack you are having problems with installing Conda.","title":"Setting up Python locally"},{"location":"preweek/python/#brushing-up-on-python","text":"Given all the heavy use of Python during Oceanhackweek, we will not be able to provide instruction in Python fundamentals. We expect you to have basic Python familiarity on the level of manipulating variables (lists, arrays), writing loops/functions, making simple plots. If you have not used Python before or it has been a while since you have used it, please, go thouroughly through the lesson below Software Carpentry Python Tutorial (1 day workshop with exercises) Notebook environment The more, the better! Here are a few more Python resources: * Codecademy Lesson (25 hours) * Python Data Science Handbook (on your own pace)","title":"Brushing up on Python"},{"location":"projects/guidelines/","text":"Project Guidelines Project Template Each project requires a brief project summary in the README.md of each GitHub project folder. Below is a template for the project summary. Project title Brief title describing the proposed work. Collaborators on this project List all participants on the project. The problem What oceanographic data science problem are you going to explore? Try to focus on the data science/methodology problem first, followed by the location-specific oceanographic example afterwards. The project is likely more engaging for fellow hackers if it is centered around common data science problems. For example, the project could be to develop a workflow in Python to analyze CTD time series from multiple data sources, instead of emphasizing and focusing only on temperature variations in one very specific part of the ocean. Application example Here is where you follow up with a location-specific example of where the data science methodology applies and list example datasets (size, format, how to access) that could be used for this exploration. Specific tasks List the specific tasks you want to accomplish. Existing methods How would you or others traditionally try to address this problem? Proposed methods/tools Building from what you learn at Oceanhackweek, what new approaches would you like to try to implement? Background reading Optional: links to manuscripts or technical documents for more in-depth analysis. Project Ideas Developing tutorials for using NASA data on the cloud. Working on an efficient open source matchup tutorial for satellite orbital data and in situ point or trajectory data. Developing an OSS algorithm development toolbox in Python to deal with a 400GB AMSR brightness temperature - in situ matchup database. Argovis - a visualualization and API for accessing Argo data OHW18 Projects Project Data Storage If your group needs to store data for project use during Oceanhackweek, depending on the volume, below is what we recommend: - Whenever possible, public datasets like OOI, ARGO, satellite, etc. should be accessed remotely in the Jupyter notebook through standard protocols like OPeNDAP or other programmatic approaches. - Data that are <1 MB : can be included directly in the project Github repository. - Data that are <10 GB : can be stored in your home space on ocean.pangeo.io. When you are accessing data from the internet, it is often useful to have a cell in the notebook that downloads such data into your home space if those data are not there, otherwise do nothing if they are already there. You can also upload a local dataset through the pangeo interface. You can upload only one file as of now, so if you have multiple files you will need to zip them and unzip them later from the terminal. These are two ways to fetch and store larger datasets locally if they are not enormous. - Data that are >10 GB : are best stored in a cloud-optimized format. If you don't already have the data on the cloud, please talk to the instructors about your needs and how you anticipate using the data. We can help you prepare and upload the data to cloud object storage with Oceanhackweek support. - Questions? Feel free post on Slack #project channel or email oceanhkw@uw.edu .","title":"Guidelines"},{"location":"projects/guidelines/#project-guidelines","text":"","title":"Project Guidelines"},{"location":"projects/guidelines/#project-template","text":"Each project requires a brief project summary in the README.md of each GitHub project folder. Below is a template for the project summary.","title":"Project Template"},{"location":"projects/guidelines/#project-title","text":"Brief title describing the proposed work.","title":"Project title"},{"location":"projects/guidelines/#collaborators-on-this-project","text":"List all participants on the project.","title":"Collaborators on this project"},{"location":"projects/guidelines/#the-problem","text":"What oceanographic data science problem are you going to explore? Try to focus on the data science/methodology problem first, followed by the location-specific oceanographic example afterwards. The project is likely more engaging for fellow hackers if it is centered around common data science problems. For example, the project could be to develop a workflow in Python to analyze CTD time series from multiple data sources, instead of emphasizing and focusing only on temperature variations in one very specific part of the ocean.","title":"The problem"},{"location":"projects/guidelines/#application-example","text":"Here is where you follow up with a location-specific example of where the data science methodology applies and list example datasets (size, format, how to access) that could be used for this exploration.","title":"Application example"},{"location":"projects/guidelines/#specific-tasks","text":"List the specific tasks you want to accomplish.","title":"Specific tasks"},{"location":"projects/guidelines/#existing-methods","text":"How would you or others traditionally try to address this problem?","title":"Existing methods"},{"location":"projects/guidelines/#proposed-methodstools","text":"Building from what you learn at Oceanhackweek, what new approaches would you like to try to implement?","title":"Proposed methods/tools"},{"location":"projects/guidelines/#background-reading","text":"Optional: links to manuscripts or technical documents for more in-depth analysis.","title":"Background reading"},{"location":"projects/guidelines/#project-ideas","text":"Developing tutorials for using NASA data on the cloud. Working on an efficient open source matchup tutorial for satellite orbital data and in situ point or trajectory data. Developing an OSS algorithm development toolbox in Python to deal with a 400GB AMSR brightness temperature - in situ matchup database. Argovis - a visualualization and API for accessing Argo data OHW18 Projects","title":"Project Ideas"},{"location":"projects/guidelines/#project-data-storage","text":"If your group needs to store data for project use during Oceanhackweek, depending on the volume, below is what we recommend: - Whenever possible, public datasets like OOI, ARGO, satellite, etc. should be accessed remotely in the Jupyter notebook through standard protocols like OPeNDAP or other programmatic approaches. - Data that are <1 MB : can be included directly in the project Github repository. - Data that are <10 GB : can be stored in your home space on ocean.pangeo.io. When you are accessing data from the internet, it is often useful to have a cell in the notebook that downloads such data into your home space if those data are not there, otherwise do nothing if they are already there. You can also upload a local dataset through the pangeo interface. You can upload only one file as of now, so if you have multiple files you will need to zip them and unzip them later from the terminal. These are two ways to fetch and store larger datasets locally if they are not enormous. - Data that are >10 GB : are best stored in a cloud-optimized format. If you don't already have the data on the cloud, please talk to the instructors about your needs and how you anticipate using the data. We can help you prepare and upload the data to cloud object storage with Oceanhackweek support. - Questions? Feel free post on Slack #project channel or email oceanhkw@uw.edu .","title":"Project Data Storage"},{"location":"projects/overview/","text":"Project Overview What is a Hack? A \"hack\" is a small project that aims to solve a specific problem using computational tools. Examples of hacks include: Build a working demo of a new or modified algorithm Outline of a larger project, with some key features scoped Visualization of an old dataset in a new manner Modify an algorithm and apply it to a new dataset Combine two pre-existing pieces of code to perform some new function Create a tool to apply to work with existing code, datasets Transform code from one language to another to use with other tools Update old code to run faster, on new machines, and/or more efficiently Extend an existing project with an additional feature Simplify code to be more maintainable, aka \"paying technical debt\" Why hack at OceanHackWeek? Increasingly, research and software development are conducted by groups of people with diverse skills and backgrounds. We believe this collaborative work leads to more innovative solutions to complex problems. At OceanHackWeek, our goal is to explore with you some of the skills needed to navigate technical and social challenges of working in these kinds of collaborative settings. We believe the best way to do so is to provide opportunities for you to gain hands-on experience in working together with others on a well-defined problem related to ocean sciences.","title":"Project Overview"},{"location":"projects/overview/#project-overview","text":"","title":"Project Overview"},{"location":"projects/overview/#what-is-a-hack","text":"A \"hack\" is a small project that aims to solve a specific problem using computational tools. Examples of hacks include: Build a working demo of a new or modified algorithm Outline of a larger project, with some key features scoped Visualization of an old dataset in a new manner Modify an algorithm and apply it to a new dataset Combine two pre-existing pieces of code to perform some new function Create a tool to apply to work with existing code, datasets Transform code from one language to another to use with other tools Update old code to run faster, on new machines, and/or more efficiently Extend an existing project with an additional feature Simplify code to be more maintainable, aka \"paying technical debt\"","title":"What is a Hack?"},{"location":"projects/overview/#why-hack-at-oceanhackweek","text":"Increasingly, research and software development are conducted by groups of people with diverse skills and backgrounds. We believe this collaborative work leads to more innovative solutions to complex problems. At OceanHackWeek, our goal is to explore with you some of the skills needed to navigate technical and social challenges of working in these kinds of collaborative settings. We believe the best way to do so is to provide opportunities for you to gain hands-on experience in working together with others on a well-defined problem related to ocean sciences.","title":"Why hack at OceanHackWeek?"},{"location":"projects/steps/","text":"Hacking at OHW20 How will the projects be conducted? Different from previous years, OHW20 is a lighter-weight event in respect of everyone's time constraints and additional responsibilities due to COVID impacts. The hack projects will therefore be primarily proposed and mentored by OHW organizers, rather than from brainstorming and spontaneous group formation in previous in-person events. OHW20 organizers have put together a list of 12 projects: Descriptions of all mentored projects . On Monday (August 10) we will have a brief \u201cproject pitch\u201d session for an overview of all projects, but feel free to sign up on this google spreadsheet beforehand and/or ask questions in #general or in each specific Slack project channel. You are welcome to gather a group to work on other project ideas, but due to time constraints we will not be able to provide dedicated support for these projects. You\u2019re however welcome to ask questions via Slack helpdesk channels. Tips for getting started Potentially choose something that you've been interested but haven't had the time or skills to do before, or something you can continue to work on post OceanHackWeek! Hacking is a community activity! It's okay to choose projects that you can't accomplish alone as other people will be there to help you, both at OceanHackWeek and outside of it! Help your group member: you might be the person they need to solve their problem, and vice versa. When discussing, pitch your explanation to the least experienced hacker in the group, and you'll end up better understanding what you're trying to do, or need to revise your idea. You can mix programming languages as needed in order to get started, but do check in with your project mentors and group members to make sure your efforts are straightforward to be absorbed into the project.","title":"Hacking at OHW20"},{"location":"projects/steps/#hacking-at-ohw20","text":"","title":"Hacking at OHW20"},{"location":"projects/steps/#how-will-the-projects-be-conducted","text":"Different from previous years, OHW20 is a lighter-weight event in respect of everyone's time constraints and additional responsibilities due to COVID impacts. The hack projects will therefore be primarily proposed and mentored by OHW organizers, rather than from brainstorming and spontaneous group formation in previous in-person events. OHW20 organizers have put together a list of 12 projects: Descriptions of all mentored projects . On Monday (August 10) we will have a brief \u201cproject pitch\u201d session for an overview of all projects, but feel free to sign up on this google spreadsheet beforehand and/or ask questions in #general or in each specific Slack project channel. You are welcome to gather a group to work on other project ideas, but due to time constraints we will not be able to provide dedicated support for these projects. You\u2019re however welcome to ask questions via Slack helpdesk channels.","title":"How will the projects be conducted?"},{"location":"projects/steps/#tips-for-getting-started","text":"Potentially choose something that you've been interested but haven't had the time or skills to do before, or something you can continue to work on post OceanHackWeek! Hacking is a community activity! It's okay to choose projects that you can't accomplish alone as other people will be there to help you, both at OceanHackWeek and outside of it! Help your group member: you might be the person they need to solve their problem, and vice versa. When discussing, pitch your explanation to the least experienced hacker in the group, and you'll end up better understanding what you're trying to do, or need to revise your idea. You can mix programming languages as needed in order to get started, but do check in with your project mentors and group members to make sure your efforts are straightforward to be absorbed into the project.","title":"Tips for getting started"},{"location":"tutorials/conda/","text":"Conda Basics Overview In the previous lesson we showed you a cloud-based environment for our work during the hackweek. What happens after the event when you want to go home and work with all the libraries we showed you? You will likely also want to have a functioning version of Python on your local laptop if that is not already in place. So this lesson takes you through our recommended procedure for doing that. We suggest you get this set up in advance so that we can help you troubleshoot when you arrive. Python Software Python software is distributed as a series of libraries that are called within your code to perform certain tasks. There are many different collections, or distributions of Python software. Generally you install a specific distribution of Python and then add additional libraries as you need them. There are also several different versions of Python. The two main versions right now are 2.7 and 3.7, although Python 2.7 will not be supported past 2020. Some libraries only work with specific versions of Python. So even though Python is one of the most adaptable, easy-to-use software systems, you can see there are still complexities to work out and potential challenges when delivering content to a large group. Therefore we have a number of different ways that we are trying to simplify this process to maximize your learning during the hackweek. We also provide instructions for using Anaconda , which is our recommended Python distribution, for installing and working with Python on your local computer. We can assist in setting up \"conda\" environments that will simplify the gathering of Python libraries and version specific to the tutorial you are working on. What is Conda? Conda is an open source package and environment management system for any programming languages, but very popular among python community, for installing multiple versions of software packages, their dependencies and switching easily between them. It works on Linux, OS X and Windows. Installing Miniconda Windows Click here to download the proper installer for your Windows platform (64 bits). We recommend to download the Python 3 version of Miniconda. You can still create Python 2 environments using the Python 3 version of Miniconda. When installing, you will be asked if you wish to make the Anaconda Python your default Python for Windows. If you do not have any other installation that is a good option. If you want to keep multiple versions of python on your machine (e.g. ESRI-supplied python, or 64 bit versions of Anaconda), then don't select the option to modify your path or modify your windows registry settings. Linux and OSX You may follow manual steps from here similar to the instructions on Windows (see above). Alternatively, you can execute these commands on a terminal shell (in this case, the bash shell): # For MacOSX url=https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh # For Linux url=https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh wget $url -O miniconda.sh bash miniconda.sh -b -p $HOME/miniconda export PATH=\"$HOME/miniconda/bin:$PATH\" conda update conda --yes Installing Anaconda (Optional) NOTE: If you don't have time or disk space for the entire distribution do not install Anaconda. Install only Miniconda , a bootstrap version of Anaconda, which contains only Python, essential packages, and conda. We will provide an environment file to install all the packages necessary for the hackweek. Anaconda is a data science platform that comes with a lot of packages. At its core, Anaconda uses the conda package management system. The list of packages included can be found here To install Anaconda, please click on the link below for your operating system, and follow the instructions on the site . Once Anaconda installation step is finished run python in the command line to test if Anaconda is installed correctly. Note: For windows, please use the Anaconda prompt as the command line. It should be installed with your installation of Anaconda If Anaconda is installed correctly, you should have this prompt, which emphasizes Anaconda : $ python Python 3.7.3|Anaconda custom (x86_64)| (default, Mar 27 2019, 22:11:17) ... Installing Python We will be using Python 3.6 or 3.7 during the week (either will work). Since Anaconda (on Linux) expects you to work in the \"bash\" shell, if this is not already your default shell, you need to set it to be so (use the \"chsh -s /bin/bash\" command to change your default shell to bash) or just run an instance of bash from the command line before issuing \"Conda\" commands (/bin/bash or where it is located on your system). If you are already familiar with Python 2.7, you can take a look at the syntax differences here , but the main point to remember is to put the print statements in parentheses: print('Hello World!') $ conda create -n py37 python=3.7 To use Python 3.7: $ conda activate py37 To check if you have the correct version: $ python --version","title":"Conda"},{"location":"tutorials/conda/#conda-basics","text":"","title":"Conda Basics"},{"location":"tutorials/conda/#overview","text":"In the previous lesson we showed you a cloud-based environment for our work during the hackweek. What happens after the event when you want to go home and work with all the libraries we showed you? You will likely also want to have a functioning version of Python on your local laptop if that is not already in place. So this lesson takes you through our recommended procedure for doing that. We suggest you get this set up in advance so that we can help you troubleshoot when you arrive.","title":"Overview"},{"location":"tutorials/conda/#python-software","text":"Python software is distributed as a series of libraries that are called within your code to perform certain tasks. There are many different collections, or distributions of Python software. Generally you install a specific distribution of Python and then add additional libraries as you need them. There are also several different versions of Python. The two main versions right now are 2.7 and 3.7, although Python 2.7 will not be supported past 2020. Some libraries only work with specific versions of Python. So even though Python is one of the most adaptable, easy-to-use software systems, you can see there are still complexities to work out and potential challenges when delivering content to a large group. Therefore we have a number of different ways that we are trying to simplify this process to maximize your learning during the hackweek. We also provide instructions for using Anaconda , which is our recommended Python distribution, for installing and working with Python on your local computer. We can assist in setting up \"conda\" environments that will simplify the gathering of Python libraries and version specific to the tutorial you are working on.","title":"Python Software"},{"location":"tutorials/conda/#what-is-conda","text":"Conda is an open source package and environment management system for any programming languages, but very popular among python community, for installing multiple versions of software packages, their dependencies and switching easily between them. It works on Linux, OS X and Windows.","title":"What is Conda?"},{"location":"tutorials/conda/#installing-miniconda","text":"","title":"Installing Miniconda"},{"location":"tutorials/conda/#windows","text":"Click here to download the proper installer for your Windows platform (64 bits). We recommend to download the Python 3 version of Miniconda. You can still create Python 2 environments using the Python 3 version of Miniconda. When installing, you will be asked if you wish to make the Anaconda Python your default Python for Windows. If you do not have any other installation that is a good option. If you want to keep multiple versions of python on your machine (e.g. ESRI-supplied python, or 64 bit versions of Anaconda), then don't select the option to modify your path or modify your windows registry settings.","title":"Windows"},{"location":"tutorials/conda/#linux-and-osx","text":"You may follow manual steps from here similar to the instructions on Windows (see above). Alternatively, you can execute these commands on a terminal shell (in this case, the bash shell): # For MacOSX url=https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh # For Linux url=https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh wget $url -O miniconda.sh bash miniconda.sh -b -p $HOME/miniconda export PATH=\"$HOME/miniconda/bin:$PATH\" conda update conda --yes","title":"Linux and OSX"},{"location":"tutorials/conda/#installing-anaconda-optional","text":"NOTE: If you don't have time or disk space for the entire distribution do not install Anaconda. Install only Miniconda , a bootstrap version of Anaconda, which contains only Python, essential packages, and conda. We will provide an environment file to install all the packages necessary for the hackweek. Anaconda is a data science platform that comes with a lot of packages. At its core, Anaconda uses the conda package management system. The list of packages included can be found here To install Anaconda, please click on the link below for your operating system, and follow the instructions on the site . Once Anaconda installation step is finished run python in the command line to test if Anaconda is installed correctly. Note: For windows, please use the Anaconda prompt as the command line. It should be installed with your installation of Anaconda If Anaconda is installed correctly, you should have this prompt, which emphasizes Anaconda : $ python Python 3.7.3|Anaconda custom (x86_64)| (default, Mar 27 2019, 22:11:17) ...","title":"Installing Anaconda (Optional)"},{"location":"tutorials/conda/#installing-python","text":"We will be using Python 3.6 or 3.7 during the week (either will work). Since Anaconda (on Linux) expects you to work in the \"bash\" shell, if this is not already your default shell, you need to set it to be so (use the \"chsh -s /bin/bash\" command to change your default shell to bash) or just run an instance of bash from the command line before issuing \"Conda\" commands (/bin/bash or where it is located on your system). If you are already familiar with Python 2.7, you can take a look at the syntax differences here , but the main point to remember is to put the print statements in parentheses: print('Hello World!') $ conda create -n py37 python=3.7 To use Python 3.7: $ conda activate py37 To check if you have the correct version: $ python --version","title":"Installing Python"},{"location":"tutorials/git/","text":"git What is Git? Git is a popular version control system that is the foundation of most open source software development. You are not required to know Git in advance of this event, but come prepared to learn a lot about it! What if I do not have the git command on my local machine? If you don't have Git installed on you local machine, you can download the latest installer on Git-SCM . More help for the install process can be found in the official Git documentation How do I learn more? We encourage you to start practicing with Git in advance of this event. Our tutorials will follow this lesson. Additional tutorial content from our past hackweeks is here . As always, feel free to post questions on CONTENT BELOW IS FROM VALENTINA, FOR OHW19. CURRENTLY JUST PASTED DIRECTLY, with minor edits that include removal of materials not focused on git or github. 0. Prerequisites Set up git on your laptop and have your github.com account. Installation instructions: https://carpentries.github.io/workshop-template/#git Test set-up by typing git in the terminal (Git-Bash on Windows) Have joined the Oceanhackweek Github Organization. 1. Creating a project repository One person in your group (preferably one who has never done it before) should volunteer and create a repository for the project under the Oceanhackweek organization. https://github.com/oceanhackweek Click New and follow the steps: check yes to create README.md Format project name as ohw19-project-ProjectName (you can change the name later) Invite others to the repo: Settings -> Collaborators Note to collaborators: you will receive an invitation to your email associated with github.com. If you cannnot find it look for the bell notifications on the top right of the website. 2. Cloning the repository Each participant should clone the repository so they have their local copy. Navigate through the terminal to the folder where you want to keep Oceanhackweek work. ( cd path_to_oceanhackweek ) git clone www.github.com/oceanhackweek/ohw19-project-ProjectName This will create a new folder called ohw19-project-ProjectName . Navigate to the folder. 3. Updating the README with your name Open the README.md file with your favorite editor create a section Under this section add your name Then add this change, commit it to the local repository, and push it so that it appears on the github.com website. git add README.md git commit -m \"Adding Valentina's name to README.md\" git push origin Make sure your change appears online. ! Remember to run git status to observe the changes made into the your repository. Pay attention to the colors. To see the changes in the files run: git diff 4. Updating your local repository with the changes of your collaborators git pull origin master ! Remember origin is just a short name of the web address of the repository. To see the what is hidden in origin: git remote -v To practice these steps more, make more changes to the title and the description of the project. Ran into a problem? When working with several people sometimes you cannot push because changes have been made that have not been incorporated: need to first pull when pulling you arrive into a merge conflict: need to resolve the conflict manually 5. Resolving the merge conflict git status You will see the file/s which caused the merge conflict in green. Open it and detect the conflict by the special format: <<<<<<< HEAD my text ======= somebody else's text >>>>>>> 35ab35436 Decide which changes you want to keep, and modify the file so it looks as you wish directly from the editor. Remove the unnecessary characters. Add, commit and push the changes. git add README.md git commit -m \"resolving merge conflict\" git push origin master You can continue working on as usual. ! Remember to pull often and push small changes to avoid messing with complicatd merges and keep your repo up-to-date. 6. Avoiding problems: forking workflow So far you collaborated using what is called a centralized git workflow: i.e. every collaborator makes directly changes to the repo. Some merge conflicts can be avoided by working with Forks instead of directly pushing to the repo. Forks are public copies of the main repo, from which you can submit changes to the main repo. Sync your local repo with the public one Fork the public repo Note it looks the same but the web address contains your username www.github.com/valentina-s/ohw19-project-ProjectName Go to your local repo and rename your origin to point to the fork: git remote rm origin git remote add origin www.github.com/valentina-s/ohw19-project-ProjectName Add a new remote to talk to the main repo: git remote add upstream https://www.github.com/oceanhackweek/ohw19-project-ProjectName From now on you will push to origin , but you pull from upstream . ! Make sure your origin contains your github username, and upstream contains the oceanhackweek name. Submitting changes via a pull request Make some changes to a file and commit and publish them. git add README.md git commit -m \"more changes\" git push origin master ! Note they appear on your fork, but not on the main repo. Submit a pull request by clicking New pull request : Explain what changes you have made. Assign somebody for review. Reviewer: look through changes in the files Approve PR or ask for more changes. ! Note: while your pull request is pending, any change you push to the fork will become a part of the request. This is useful if you are asked to make small changes before your PR is accepted. In general we encourage github users to submit changes to the main repo through pull requests, but direct push is still a viable workflow for small projects when participants work on the same documents. Version control and Jupyter notebooks git diff gives rubbish on notebooks notebooks are text files, but the information is stored in json format split analysis in small notebooks, individual people working on individual notebooks, put longer code into functions and keep move functions to modules (.py files which work well with version control). before committing clear output notebook output (images are stored in very long strings of crazy characters) if you use the jupyter lab mode you can work with .py files instead of notebooks jupyter lab nbdime: tool to diff notebooks https://nbdime.readthedocs.io/en/latest/ Troubleshooting Deleting files git rm filename.txt rm filename.txt ! git rm just removes the file from git, to delete the file completely use the bash rm command after that Reverting to the previous commit git revert HEAD ! Note your files in the local repo will be still there. References Software Carpentry Lesson Atlassian Tutorials - Version Control","title":"git"},{"location":"tutorials/git/#git","text":"","title":"git"},{"location":"tutorials/git/#what-is-git","text":"Git is a popular version control system that is the foundation of most open source software development. You are not required to know Git in advance of this event, but come prepared to learn a lot about it!","title":"What is Git?"},{"location":"tutorials/git/#what-if-i-do-not-have-the-git-command-on-my-local-machine","text":"If you don't have Git installed on you local machine, you can download the latest installer on Git-SCM . More help for the install process can be found in the official Git documentation","title":"What if I do not have the git command on my local machine?"},{"location":"tutorials/git/#how-do-i-learn-more","text":"We encourage you to start practicing with Git in advance of this event. Our tutorials will follow this lesson. Additional tutorial content from our past hackweeks is here . As always, feel free to post questions on CONTENT BELOW IS FROM VALENTINA, FOR OHW19. CURRENTLY JUST PASTED DIRECTLY, with minor edits that include removal of materials not focused on git or github.","title":"How do I learn more?"},{"location":"tutorials/git/#0-prerequisites","text":"Set up git on your laptop and have your github.com account. Installation instructions: https://carpentries.github.io/workshop-template/#git Test set-up by typing git in the terminal (Git-Bash on Windows) Have joined the Oceanhackweek Github Organization.","title":"0. Prerequisites"},{"location":"tutorials/git/#1-creating-a-project-repository","text":"One person in your group (preferably one who has never done it before) should volunteer and create a repository for the project under the Oceanhackweek organization. https://github.com/oceanhackweek Click New and follow the steps: check yes to create README.md Format project name as ohw19-project-ProjectName (you can change the name later) Invite others to the repo: Settings -> Collaborators Note to collaborators: you will receive an invitation to your email associated with github.com. If you cannnot find it look for the bell notifications on the top right of the website.","title":"1. Creating a project repository"},{"location":"tutorials/git/#2-cloning-the-repository","text":"Each participant should clone the repository so they have their local copy. Navigate through the terminal to the folder where you want to keep Oceanhackweek work. ( cd path_to_oceanhackweek ) git clone www.github.com/oceanhackweek/ohw19-project-ProjectName This will create a new folder called ohw19-project-ProjectName . Navigate to the folder.","title":"2. Cloning the repository"},{"location":"tutorials/git/#3-updating-the-readme-with-your-name","text":"Open the README.md file with your favorite editor create a section Under this section add your name Then add this change, commit it to the local repository, and push it so that it appears on the github.com website. git add README.md git commit -m \"Adding Valentina's name to README.md\" git push origin Make sure your change appears online. ! Remember to run git status to observe the changes made into the your repository. Pay attention to the colors. To see the changes in the files run: git diff","title":"3. Updating the README with your name"},{"location":"tutorials/git/#4-updating-your-local-repository-with-the-changes-of-your-collaborators","text":"git pull origin master ! Remember origin is just a short name of the web address of the repository. To see the what is hidden in origin: git remote -v To practice these steps more, make more changes to the title and the description of the project. Ran into a problem? When working with several people sometimes you cannot push because changes have been made that have not been incorporated: need to first pull when pulling you arrive into a merge conflict: need to resolve the conflict manually","title":"4. Updating your local repository with the changes of your collaborators"},{"location":"tutorials/git/#5-resolving-the-merge-conflict","text":"git status You will see the file/s which caused the merge conflict in green. Open it and detect the conflict by the special format: <<<<<<< HEAD my text ======= somebody else's text >>>>>>> 35ab35436 Decide which changes you want to keep, and modify the file so it looks as you wish directly from the editor. Remove the unnecessary characters. Add, commit and push the changes. git add README.md git commit -m \"resolving merge conflict\" git push origin master You can continue working on as usual. ! Remember to pull often and push small changes to avoid messing with complicatd merges and keep your repo up-to-date.","title":"5. Resolving the merge conflict"},{"location":"tutorials/git/#6-avoiding-problems-forking-workflow","text":"So far you collaborated using what is called a centralized git workflow: i.e. every collaborator makes directly changes to the repo. Some merge conflicts can be avoided by working with Forks instead of directly pushing to the repo. Forks are public copies of the main repo, from which you can submit changes to the main repo. Sync your local repo with the public one Fork the public repo Note it looks the same but the web address contains your username www.github.com/valentina-s/ohw19-project-ProjectName Go to your local repo and rename your origin to point to the fork: git remote rm origin git remote add origin www.github.com/valentina-s/ohw19-project-ProjectName Add a new remote to talk to the main repo: git remote add upstream https://www.github.com/oceanhackweek/ohw19-project-ProjectName From now on you will push to origin , but you pull from upstream . ! Make sure your origin contains your github username, and upstream contains the oceanhackweek name.","title":"6. Avoiding problems: forking workflow"},{"location":"tutorials/git/#submitting-changes-via-a-pull-request","text":"Make some changes to a file and commit and publish them. git add README.md git commit -m \"more changes\" git push origin master ! Note they appear on your fork, but not on the main repo. Submit a pull request by clicking New pull request : Explain what changes you have made. Assign somebody for review. Reviewer: look through changes in the files Approve PR or ask for more changes. ! Note: while your pull request is pending, any change you push to the fork will become a part of the request. This is useful if you are asked to make small changes before your PR is accepted. In general we encourage github users to submit changes to the main repo through pull requests, but direct push is still a viable workflow for small projects when participants work on the same documents.","title":"Submitting changes via a pull request"},{"location":"tutorials/git/#version-control-and-jupyter-notebooks","text":"git diff gives rubbish on notebooks notebooks are text files, but the information is stored in json format split analysis in small notebooks, individual people working on individual notebooks, put longer code into functions and keep move functions to modules (.py files which work well with version control). before committing clear output notebook output (images are stored in very long strings of crazy characters) if you use the jupyter lab mode you can work with .py files instead of notebooks jupyter lab nbdime: tool to diff notebooks https://nbdime.readthedocs.io/en/latest/","title":"Version control and Jupyter notebooks"},{"location":"tutorials/git/#troubleshooting","text":"Deleting files git rm filename.txt rm filename.txt ! git rm just removes the file from git, to delete the file completely use the bash rm command after that Reverting to the previous commit git revert HEAD ! Note your files in the local repo will be still there.","title":"Troubleshooting"},{"location":"tutorials/git/#references","text":"Software Carpentry Lesson Atlassian Tutorials - Version Control","title":"References"},{"location":"tutorials/github/","text":"GitHub What is Git/GitHub? Git is a popular version control system that is the foundation of most open source software development. You are not required to know Git in advance of this event, but come prepared to learn a lot about it! GitHub is a hosting service for Git repositories, enabling us to share code across teams in a web environment. What if I do not have the git command on my local machine? If you don't have Git installed on you local machine, you can download the latest installer on Git-SCM . More help for the install process can be found in the official Git documentation Why do I need a GitHub account? There are three reasons you are required to have a GitHub account for the hackweek: We use GitHub credentialing to give everyone access to our cloud computing resources All of our tutorials and project work will be shared on GitHub You will want a GitHub account to practice everything you'll be learning during the Git/GitHub tutorials So, if you don't already have a GitHub account, just navigate to GitHub : Then, click on the big green button and then answer a few required questions. Be sure to save your password somewhere safe because you will need it later! Why are we joining a GitHub Organization? GitHub organizations are a convenient way for teams to get all content relevant to a specific project our workshop into one place. By having everything in one central location you will spend less time searching for hackweek content. GitHub organizations have ``teams'' that offer simple ways to provide respository access to groups of people, rather than individuals. We have created a GitHub organization called OceanHackWeek Resources . For security purposes you can only join the organization by invitation. Here are the steps: Once you have a GitHub ID, send it to Emilio Mayorga on our Slack channel We will then find your ID and send you an invitation which should generate an email notification to the email you provided when you signed up for GitHub Follow the links in the email to accept the invitation How should I configure my GitHub account? As you'll learn in the next lesson, we will use the OceanHackWeek Resources GitHub organization as a way to manage access to our cloud computing resources. In order for this to work each person must have public, rather than private membership in the ICESat-2hackweek organization. First, navigate to the \"People\" tab on the OceanHackWeek Resources GitHub organization: Now, if you see \"Private\" to the right of your account, you will need to switch this to \"Public\": The steps for doing this are also well documented on this GitHub help page. How will GitHub repositories be structured? When you click on the \"Repositories\" tab in the OceanHackWeek Resources GitHub Organization you will see a list of names, each of which links to a separate GitHub repository: Each repository is a container for a specific subset of material for this event. For example, we have a separate repository for each tutorial. There is a repository for the public-facing website you used to register for this event, and a repository for the wiki page. We'll also create new repositories for each project when we meet in person. How do I learn more? We encourage you to start practicing with Git and GitHub in advance of this event. Our tutorials will follow this lesson. Additional tutorial content from our past hackweeks is here . As always, feel free to post questions on Slack if you run into any difficulties!","title":"Data Access in Python"},{"location":"tutorials/github/#github","text":"","title":"GitHub"},{"location":"tutorials/github/#what-is-gitgithub","text":"Git is a popular version control system that is the foundation of most open source software development. You are not required to know Git in advance of this event, but come prepared to learn a lot about it! GitHub is a hosting service for Git repositories, enabling us to share code across teams in a web environment.","title":"What is Git/GitHub?"},{"location":"tutorials/github/#what-if-i-do-not-have-the-git-command-on-my-local-machine","text":"If you don't have Git installed on you local machine, you can download the latest installer on Git-SCM . More help for the install process can be found in the official Git documentation","title":"What if I do not have the git command on my local machine?"},{"location":"tutorials/github/#why-do-i-need-a-github-account","text":"There are three reasons you are required to have a GitHub account for the hackweek: We use GitHub credentialing to give everyone access to our cloud computing resources All of our tutorials and project work will be shared on GitHub You will want a GitHub account to practice everything you'll be learning during the Git/GitHub tutorials So, if you don't already have a GitHub account, just navigate to GitHub : Then, click on the big green button and then answer a few required questions. Be sure to save your password somewhere safe because you will need it later!","title":"Why do I need a GitHub account?"},{"location":"tutorials/github/#why-are-we-joining-a-github-organization","text":"GitHub organizations are a convenient way for teams to get all content relevant to a specific project our workshop into one place. By having everything in one central location you will spend less time searching for hackweek content. GitHub organizations have ``teams'' that offer simple ways to provide respository access to groups of people, rather than individuals. We have created a GitHub organization called OceanHackWeek Resources . For security purposes you can only join the organization by invitation. Here are the steps: Once you have a GitHub ID, send it to Emilio Mayorga on our Slack channel We will then find your ID and send you an invitation which should generate an email notification to the email you provided when you signed up for GitHub Follow the links in the email to accept the invitation","title":"Why are we joining a GitHub Organization?"},{"location":"tutorials/github/#how-should-i-configure-my-github-account","text":"As you'll learn in the next lesson, we will use the OceanHackWeek Resources GitHub organization as a way to manage access to our cloud computing resources. In order for this to work each person must have public, rather than private membership in the ICESat-2hackweek organization. First, navigate to the \"People\" tab on the OceanHackWeek Resources GitHub organization: Now, if you see \"Private\" to the right of your account, you will need to switch this to \"Public\": The steps for doing this are also well documented on this GitHub help page.","title":"How should I configure my GitHub account?"},{"location":"tutorials/github/#how-will-github-repositories-be-structured","text":"When you click on the \"Repositories\" tab in the OceanHackWeek Resources GitHub Organization you will see a list of names, each of which links to a separate GitHub repository: Each repository is a container for a specific subset of material for this event. For example, we have a separate repository for each tutorial. There is a repository for the public-facing website you used to register for this event, and a repository for the wiki page. We'll also create new repositories for each project when we meet in person.","title":"How will GitHub repositories be structured?"},{"location":"tutorials/github/#how-do-i-learn-more","text":"We encourage you to start practicing with Git and GitHub in advance of this event. Our tutorials will follow this lesson. Additional tutorial content from our past hackweeks is here . As always, feel free to post questions on Slack if you run into any difficulties!","title":"How do I learn more?"},{"location":"tutorials/jupyterhub/","text":"Jupyter Hub Why are we using a shared cloud environment? Teaching software to a diverse group of participants, each with different computers and operating systems, can be challenging. As you'll learn in the next lesson, there are specific ways to configure our software for the tutorials to be successful, so it takes time to get everyone set up consistently. Our solution to this is to give everyone access to a cloud computing environment that is pre-configured for the specific software we will deploy. This cloud computing instance can be accessed from any web browser, which eliminates the need for configuring each person's individual computer. We will encourage you to use our shared resources for all the tutorials, and you can optionally use this for your projects as well. We also hope you will practice installing Python libraries locally on your laptop so that you can continue working after leaving our event (see our next lesson for details). How do I access the shared cloud environment? Access to our shared cloud environment is easy. Just click on Assuming you set up your GitHub credentials correctly (see the previous lesson), you can now click on the \"Sign in with GitHub\" button: It will take a little bit of time for this to load - be patient! Once things are spun up you will see your very own instance of a JupyterLab environment: What is Pangeo and how is this system configured? Pangeo is a community of researchers building open, reproducible and scalable scientific software tools. Several of us are involved in projects with NASA and NSF to build prototype systems to enable data discovery in the era of expanding data volume and complexity. For this hackweek have created virtual computing instances on Amazon Web Services that can be deployed on demand in a parallel computing environment. We use JupyterHub as a way to give a Jupyter Notebook server to each person in a group. These slides give a nice overview of what JupyterHub is all about. We use JupyterHub in an educational setting because it enables us to quickly begin working with code without spending time to get the necessary libraries and dependencies set up on everyone's individual computers. How do I get my code in and out of Pangeo? When you start your own instance of Pangeo you will have access to your own virtual drive space. No other Pangeo users will be able to see or access your data files. Next we will explain how you can upload files to your virtual drive space and how to save files from Pangeo back to another location, such as GitHub or your own local laptop drive. First we'll show you how to pull some files from GitHub into your virtual drive space. This will be a common task during the hackweek: at the start of each tutorial we'll ask you to \"clone\" (make a copy of) the GitHub repository corresponding to the specific tutorial being taught into your Pangeo drive space. To do this, we will need to interface with the file system of Pangeo. Pangeo is deployed in a Linux operating system and we will need to open a terminal within Pangeo to manage our files. There are two ways to do this: (1) Navigate to the \"File\" menu, choose \"New\" and then \"Terminal\" or (2) click on the \"terminal\" button in JupyterLab: This will open a new terminal tab in your JupyterLab interface: Now you can issue any Linux commands to manage your local file system. Now let's clone a repository (Note: we'll be teaching about Git clone during our introductory tutorials). This tutorial is built in a repository called \"preliminary\", so let's try cloning that. First, navigate in a browser on your own computer to the repository link here . Next, click on the green \"clone or download\" button and then copy the url into your clipboard by clicking the copy button: Now navigate back to your command line in JupyterLab. Type \"git clone\" and then paste in the url: A note about cutting and pasting Pasting something from your clipboard into the Pangeo terminal requires holding down the \"shift\" key and right-clicking. This is different from the usual Linux method that only requires a right click. After issuing the Git clone command you should see something like this: How do I end my Pangeo session? Will I lose all of my work? When you are finished working for the day it is important to explicitly log out of your Pangeo session. The reason for this is it will save us a bit of money! When you keep a session active it uses up AWS resources and keeps a series of virtual machines deployed. To stop the server, navigate to \"Hub --> Control Panel\" and then click the \"Stop my server\" button: logging out Logging out will NOT cause any of your work to be lost or deleted. It simply shuts down some resources. It would be equivalent to turning off your desktop computer at the end of the day.","title":"Jupyter"},{"location":"tutorials/jupyterhub/#jupyter-hub","text":"","title":"Jupyter Hub"},{"location":"tutorials/jupyterhub/#why-are-we-using-a-shared-cloud-environment","text":"Teaching software to a diverse group of participants, each with different computers and operating systems, can be challenging. As you'll learn in the next lesson, there are specific ways to configure our software for the tutorials to be successful, so it takes time to get everyone set up consistently. Our solution to this is to give everyone access to a cloud computing environment that is pre-configured for the specific software we will deploy. This cloud computing instance can be accessed from any web browser, which eliminates the need for configuring each person's individual computer. We will encourage you to use our shared resources for all the tutorials, and you can optionally use this for your projects as well. We also hope you will practice installing Python libraries locally on your laptop so that you can continue working after leaving our event (see our next lesson for details).","title":"Why are we using a shared cloud environment?"},{"location":"tutorials/jupyterhub/#how-do-i-access-the-shared-cloud-environment","text":"Access to our shared cloud environment is easy. Just click on Assuming you set up your GitHub credentials correctly (see the previous lesson), you can now click on the \"Sign in with GitHub\" button: It will take a little bit of time for this to load - be patient! Once things are spun up you will see your very own instance of a JupyterLab environment:","title":"How do I access the shared cloud environment?"},{"location":"tutorials/jupyterhub/#what-is-pangeo-and-how-is-this-system-configured","text":"Pangeo is a community of researchers building open, reproducible and scalable scientific software tools. Several of us are involved in projects with NASA and NSF to build prototype systems to enable data discovery in the era of expanding data volume and complexity. For this hackweek have created virtual computing instances on Amazon Web Services that can be deployed on demand in a parallel computing environment. We use JupyterHub as a way to give a Jupyter Notebook server to each person in a group. These slides give a nice overview of what JupyterHub is all about. We use JupyterHub in an educational setting because it enables us to quickly begin working with code without spending time to get the necessary libraries and dependencies set up on everyone's individual computers.","title":"What is Pangeo and how is this system configured?"},{"location":"tutorials/jupyterhub/#how-do-i-get-my-code-in-and-out-of-pangeo","text":"When you start your own instance of Pangeo you will have access to your own virtual drive space. No other Pangeo users will be able to see or access your data files. Next we will explain how you can upload files to your virtual drive space and how to save files from Pangeo back to another location, such as GitHub or your own local laptop drive. First we'll show you how to pull some files from GitHub into your virtual drive space. This will be a common task during the hackweek: at the start of each tutorial we'll ask you to \"clone\" (make a copy of) the GitHub repository corresponding to the specific tutorial being taught into your Pangeo drive space. To do this, we will need to interface with the file system of Pangeo. Pangeo is deployed in a Linux operating system and we will need to open a terminal within Pangeo to manage our files. There are two ways to do this: (1) Navigate to the \"File\" menu, choose \"New\" and then \"Terminal\" or (2) click on the \"terminal\" button in JupyterLab: This will open a new terminal tab in your JupyterLab interface: Now you can issue any Linux commands to manage your local file system. Now let's clone a repository (Note: we'll be teaching about Git clone during our introductory tutorials). This tutorial is built in a repository called \"preliminary\", so let's try cloning that. First, navigate in a browser on your own computer to the repository link here . Next, click on the green \"clone or download\" button and then copy the url into your clipboard by clicking the copy button: Now navigate back to your command line in JupyterLab. Type \"git clone\" and then paste in the url: A note about cutting and pasting Pasting something from your clipboard into the Pangeo terminal requires holding down the \"shift\" key and right-clicking. This is different from the usual Linux method that only requires a right click. After issuing the Git clone command you should see something like this:","title":"How do I get my code in and out of Pangeo?"},{"location":"tutorials/jupyterhub/#how-do-i-end-my-pangeo-session-will-i-lose-all-of-my-work","text":"When you are finished working for the day it is important to explicitly log out of your Pangeo session. The reason for this is it will save us a bit of money! When you keep a session active it uses up AWS resources and keeps a series of virtual machines deployed. To stop the server, navigate to \"Hub --> Control Panel\" and then click the \"Stop my server\" button: logging out Logging out will NOT cause any of your work to be lost or deleted. It simply shuts down some resources. It would be equivalent to turning off your desktop computer at the end of the day.","title":"How do I end my Pangeo session? Will I lose all of my work?"}]}